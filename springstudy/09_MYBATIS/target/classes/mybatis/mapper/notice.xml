<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- mybatis.mapper 패키지에 저장된 notice.xml입니다. -->
<mapper namespace="mybatis.mapper.notice">

	<!-- 전체 목록보기 -->
	<select id="selectNoticeList" resultType="NoticeDTO">  <!-- com.goodee.ex09.domain.NoticeDTO를 NoticeDTO로 줄여 부르기로 mybatis-config.xml에서 처리함 -->
		SELECT NOTICE_NO, TITLE, CONTENT, HIT, CREATED, LASTMODIFIED
		  FROM NOTICE
		 ORDER BY NOTICE_NO DESC
	</select>
	
	<!-- 등록 -->
	<insert id="insertNotice" parameterType="NoticeDTO"> <!-- resultType은 0 아니면 1로 int지만, Spring의 mybatis에서는 적지 않는 것이 문법이다. -->
		INSERT INTO NOTICE
		    (NOTICE_NO, TITLE, CONTENT, HIT, CREATED, LASTMODIFIED)
		VALUES
		    (NOTICE_SEQ.NEXTVAL, #{title}, #{content}, 0, SYSTIMESTAMP, SYSTIMESTAMP)
	</insert>
	
	<!-- 상세보기 -->
	<select id="selectNoticeByNo" parameterType="Long" resultType="NoticeDTO"> <!-- Spring의 mybatis parameterType 생략해도 동작한다. -->
		SELECT NOTICE_NO, TITLE, CONTENT, HIT, CREATED, LASTMODIFIED
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}		
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHit" parameterType="Long">
		UPDATE 
		       NOTICE
		   SET 
		       HIT = HIT + 1
		 WHERE 
		       NOTICE_NO = #{noticeNo}
	</update>
	
	<!-- 수정 -->
	<update id="updateNotice" parameterType="NoticeDTO">
		UPDATE 
		       NOTICE
		   SET 
		       TITLE = #{title}
		     , CONTENT = #{content}
		     , LASTMODIFIED = SYSTIMESTAMP
		 WHERE 
		       NOTICE_NO = #{noticeNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteNotice" parameterType="Long">
		DELETE
		  FROM 
		       NOTICE
		 WHERE 
		       NOTICE_NO = #{noticeNo}
	</delete>

	<!-- 다중 삭제 (동적 SQL)-->
	<!-- DELETE FROM NOTICE WHERE NOTICE_NO IN(1,4) -->
	<delete id="deleteNoticeList" parameterType="List">
		DELETE
		  FROM NOTICE
		<where>
			<foreach collection="list" item="noticeNo" open="NOTICE_NO IN(" separator="," close=")">
				#{noticeNo}
			</foreach>
		</where>
	</delete>

</mapper>