JDBC : DataSource 없이 Connection을 하나만 사용하는 초기 버전
       BoardRepository.java
       BoardTestCase.java

DBCP : DataSource 이용해 Connection을 여러 개 사용하는 버전
       BoardRepository.java - context.xml 정보 사용(Tomcat이 실행되어야 context.xml을 읽어 옴)
       BoardTestCase.java  - Tomcat 없이 단위 테스트 동작 중


DataBase Connection Pool
	connection을 여러 개 만들어서 대여, 반납 하는 방식


1. pom.xml
	1) 버전 최신화
	2) ojdbc6 라이브러리 다운로드(https://devtools.jahia.com/nexus/content/groups/maven-jahia-org/com/oracle/ojdbc6/)
		(1) 별도의 repository 등록 
		(2) dependency 추가
	3) lombok dependency 추가
	4) spring-test dependency 추가(JUnit 단위 테스트)
	5) maven - update project

2. web xml
	1) 인코딩 필터 태그 넣기 

3. webapp/resources/sql
	board.sql 작성(실행할 수 있는 기능이 sts3에 설치되어 있지 않기 때문에 SQL DEVELOPER로 실행)

4. webapp/META-INF(폴더 만들어야 함)
	context.xml 작성

	tomcat의 context.xml을 가져다 쓰는 것이다.
	tomcat 서버가 가지고 있는 context.xml을 열어서 해당 내용을 넣어도 똑같이 동작한다. (이 방법은 다른 프로젝트도 다 서버 접속을 할 수 있게 해준다.)
	
5. BoardConfig.java를 이용해서 bean 작성
   
6. JUnit 단위 테스트
	src/test/java 패키지에 JUnit TestCase 4버전 추가(스프링은 일반 클래스로 만들어서 애너테이션 붙이면 됨)
	JUnit 버전에 맞는 SpringJUnit4ClassRunner 클래스를 등록
	bean(repository 만드는 bean)을 만들도록 설정